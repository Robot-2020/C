//1.判断素数
int isPrime(int x){ //除了1、自己不能被其他数整除的数就是素数
  int ret = 1;      // 1 代表是素数  0 代表不是素数
  int i;
  if( x == 1 || ( x % 2 == 0 && x != 2))  // 1 或者 不是2的偶数都不是素数
    return 0;
  for( i = 3; i < sqrt(x); i+=2){ //从奇数3开始，每次+2只需要判断奇数，并且只需要到根号x;
    if( x % i == 0){
      return 0;
    }
  }
  return 1;
}

//2.构造素数表
const int maxNumber = 25;
int isPrime[maxNumber];
int i;
int x;
for( i = 0; i < maxNumber; i++){  
  ifPrime[i] = i;                       //先把所有数置为1表示为素数。
}
for( x = 2; x < maxNumber; x++){
  if(isPrime[x]){                       //从2开始 把从非素数2开始的所有素数的倍数的数全部置为非素数。
    for( i = 2; i*x < maxNumber; i++){
      ifPrime[i*x] = 0;
    }
  }
}
for( i = 2; i < maxNumber; i++){
  if(isPrime[i]){
    printf("%d\t", i);
  }
}
